// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(GymContext))]
    [Migration("20201125175441_InitialM")]
    partial class InitialM
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DominioGym.Cargo", b =>
                {
                    b.Property<int>("IdCargo")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreCargo")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCargo");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("DominioGym.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionCategoria")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreCategoria")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("DominioGym.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoM")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoP")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Dni");

                    b.Property<bool>("Estado");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Telefono");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("DominioGym.Comprobante", b =>
                {
                    b.Property<int>("IdComprobante")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estado");

                    b.Property<DateTime>("FechaEmision");

                    b.Property<int>("IdCliente");

                    b.Property<int>("IdEmpleado");

                    b.Property<decimal>("Igv");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Subtotal");

                    b.Property<decimal>("Total");

                    b.HasKey("IdComprobante");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("Comprobante");
                });

            modelBuilder.Entity("DominioGym.DetalleComprobante", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad");

                    b.Property<int>("IdComprobante");

                    b.Property<int>("IdProducto");

                    b.Property<decimal>("Precio");

                    b.Property<decimal>("Subtotal");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdComprobante");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetalleComprobante");
                });

            modelBuilder.Entity("DominioGym.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoM")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoP")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Clave");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Dni");

                    b.Property<bool>("Estado");

                    b.Property<int>("IdCargo");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Telefono");

                    b.HasKey("IdEmpleado");

                    b.HasIndex("IdCargo");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("DominioGym.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad");

                    b.Property<bool>("Estado");

                    b.Property<int>("IdCategoria");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("PrecioVenta");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("DominioGym.Comprobante", b =>
                {
                    b.HasOne("DominioGym.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DominioGym.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("IdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DominioGym.DetalleComprobante", b =>
                {
                    b.HasOne("DominioGym.Comprobante", "Comprobante")
                        .WithMany("Detalle")
                        .HasForeignKey("IdComprobante")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DominioGym.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DominioGym.Empleado", b =>
                {
                    b.HasOne("DominioGym.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("IdCargo")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DominioGym.Producto", b =>
                {
                    b.HasOne("DominioGym.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
